{"/home/travis/build/npmtest/node-npmtest-angular2-universal/test.js":"/* istanbul instrument in package npmtest_angular2_universal */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-angular2-universal/lib.npmtest_angular2_universal.js":"/* istanbul instrument in package npmtest_angular2_universal */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_angular2_universal = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_angular2_universal = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-angular2-universal/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-angular2-universal && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_angular2_universal */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_angular2_universal\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_angular2_universal.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_angular2_universal.rollup.js'] =\n            local.assetsDict['/assets.npmtest_angular2_universal.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_angular2_universal.__dirname + '/lib.npmtest_angular2_universal.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-angular2-universal/node_modules/angular2-universal/node/index.js":"\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nvar universalNode = require('./node');\n__export(require('./node'));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = universalNode;\n//# sourceMappingURL=index.js.map","/home/travis/build/npmtest/node-npmtest-angular2-universal/node_modules/angular2-universal/node/node.js":"\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(require('./env'));\n__export(require('./universal-module'));\n__export(require('./proxy-document'));\n__export(require('../common'));\n__export(require('../lib'));\n//# sourceMappingURL=node.js.map","/home/travis/build/npmtest/node-npmtest-angular2-universal/node_modules/angular2-universal/node/env.js":"\"use strict\";\nexports.isBrowser = false;\nexports.isNode = true;\n//# sourceMappingURL=env.js.map","/home/travis/build/npmtest/node-npmtest-angular2-universal/node_modules/angular2-universal/node/universal-module.js":"\"use strict\";\nvar core_1 = require('@angular/core');\nvar lib_1 = require('../lib');\nfunction platformUniversalDynamic(extraProviders) {\n    var platform = lib_1.platformNodeDynamic(extraProviders);\n    return platform;\n}\nexports.platformUniversalDynamic = platformUniversalDynamic;\n;\nvar UniversalModule = (function () {\n    function UniversalModule() {\n    }\n    UniversalModule.withConfig = function (config) {\n        if (config === void 0) { config = {}; }\n        var providers = lib_1.NodeModule.withConfig(config).providers;\n        return {\n            ngModule: UniversalModule,\n            providers: providers || []\n        };\n    };\n    UniversalModule.decorators = [\n        { type: core_1.NgModule, args: [{\n                    exports: [\n                        lib_1.NodeModule,\n                        lib_1.NodeHttpModule,\n                        lib_1.NodeJsonpModule\n                    ]\n                },] },\n    ];\n    UniversalModule.ctorParameters = [];\n    return UniversalModule;\n}());\nexports.UniversalModule = UniversalModule;\n//# sourceMappingURL=universal-module.js.map","/home/travis/build/npmtest/node-npmtest-angular2-universal/node_modules/angular2-universal/browser.js":"\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(require('./browser/index'));\n//# sourceMappingURL=browser.js.map","/home/travis/build/npmtest/node-npmtest-angular2-universal/node_modules/angular2-universal/browser/index.js":"\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nvar browserUniversal = require('./browser');\n__export(require('./browser'));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = browserUniversal;\n//# sourceMappingURL=index.js.map","/home/travis/build/npmtest/node-npmtest-angular2-universal/node_modules/angular2-universal/browser/browser.js":"\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(require('./env'));\n__export(require('./universal-module'));\n__export(require('../common'));\n//# sourceMappingURL=browser.js.map","/home/travis/build/npmtest/node-npmtest-angular2-universal/node_modules/angular2-universal/browser/env.js":"\"use strict\";\nexports.isBrowser = true;\nexports.isNode = false;\n//# sourceMappingURL=env.js.map","/home/travis/build/npmtest/node-npmtest-angular2-universal/node_modules/angular2-universal/browser/universal-module.js":"\"use strict\";\nvar core_1 = require('@angular/core');\nvar http_1 = require('@angular/http');\nvar platform_browser_dynamic_1 = require('@angular/platform-browser-dynamic');\nvar platform_browser_1 = require('@angular/platform-browser');\nvar prebootClient;\ntry {\n    prebootClient = require('preboot/__build/src/browser/preboot_browser');\n    prebootClient = (prebootClient && prebootClient.prebootClient) || prebootClient;\n}\ncatch (e) { }\nfunction _randomChar() {\n    return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n}\nfunction _appIdRandomProviderFactory() {\n    return \"\" + _randomChar() + _randomChar() + _randomChar();\n}\nvar SharedStylesHost = platform_browser_1.__platform_browser_private__.SharedStylesHost;\nexports.UNIVERSAL_CACHE = new core_1.OpaqueToken('UNIVERSAL_CACHE');\nexports.AUTO_PREBOOT = new core_1.OpaqueToken('AUTO_PREBOOT');\nfunction universalCacheFactory() {\n    var _win = window;\n    var CACHE = Object.assign({}, _win.UNIVERSAL_CACHE || {});\n    delete _win.UNIVERSAL_CACHE;\n    return CACHE;\n}\nexports.universalCacheFactory = universalCacheFactory;\nfunction appIdFactory() {\n    var _win = window;\n    var CACHE = _win.UNIVERSAL_CACHE || {};\n    var appId = null;\n    if (CACHE.APP_ID) {\n        appId = CACHE.APP_ID;\n    }\n    else {\n        appId = _appIdRandomProviderFactory();\n    }\n    return appId;\n}\nexports.appIdFactory = appIdFactory;\nfunction appBootstrapListenerFactory(autoPreboot) {\n    return autoPreboot ? prebootComplete : function () { };\n}\nexports.appBootstrapListenerFactory = appBootstrapListenerFactory;\nfunction prebootComplete(value) {\n    var _win = window;\n    if (_win && prebootClient) {\n        setTimeout(function () { return prebootClient().complete(); });\n    }\n    return value;\n}\nexports.prebootComplete = prebootComplete;\nvar UniversalModule = (function () {\n    function UniversalModule(sharedStylesHost) {\n        var domStyles = document.head.querySelectorAll('style');\n        var styles = Array.prototype.slice.call(domStyles)\n            .filter(function (style) { return (style.innerText || style.textContent).indexOf('_ng') !== -1; })\n            .map(function (style) { return (style.innerText || style.textContent); });\n        styles.forEach(function (style) {\n            sharedStylesHost._stylesSet.add(style);\n            sharedStylesHost._styles.push(style);\n        });\n    }\n    UniversalModule.withConfig = function (_config) {\n        if (_config === void 0) { _config = {}; }\n        var providers = [];\n        if (typeof _config.autoPreboot === 'boolean') {\n            providers.push({\n                provide: exports.AUTO_PREBOOT,\n                useValue: _config.autoPreboot,\n            });\n        }\n        return {\n            ngModule: UniversalModule,\n            providers: providers,\n        };\n    };\n    UniversalModule.decorators = [\n        { type: core_1.NgModule, args: [{\n                    imports: [],\n                    exports: [\n                        platform_browser_1.BrowserModule,\n                        http_1.HttpModule,\n                        http_1.JsonpModule\n                    ],\n                    providers: [\n                        {\n                            provide: exports.UNIVERSAL_CACHE,\n                            useFactory: universalCacheFactory,\n                        },\n                        {\n                            provide: core_1.APP_ID,\n                            useFactory: appIdFactory,\n                            deps: []\n                        },\n                        {\n                            provide: exports.AUTO_PREBOOT,\n                            useValue: true\n                        },\n                        {\n                            multi: true,\n                            provide: core_1.APP_BOOTSTRAP_LISTENER,\n                            useFactory: appBootstrapListenerFactory,\n                            deps: [exports.AUTO_PREBOOT],\n                        },\n                    ]\n                },] },\n    ];\n    UniversalModule.ctorParameters = [\n        { type: undefined, decorators: [{ type: core_1.Inject, args: [SharedStylesHost,] },] },\n    ];\n    return UniversalModule;\n}());\nexports.UniversalModule = UniversalModule;\nfunction platformUniversalDynamic(extraProviders) {\n    var platform = core_1.createPlatformFactory(platform_browser_dynamic_1.platformBrowserDynamic, 'universalBrowserDynamic', [])(extraProviders);\n    return platform;\n}\nexports.platformUniversalDynamic = platformUniversalDynamic;\n;\n//# sourceMappingURL=universal-module.js.map","/home/travis/build/npmtest/node-npmtest-angular2-universal/node_modules/angular2-universal/node.js":"\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(require('./node/index'));\n//# sourceMappingURL=node.js.map","/home/travis/build/npmtest/node-npmtest-angular2-universal/node_modules/angular2-universal/node/proxy-document.js":"\"use strict\";\nvar lib_1 = require('../lib');\nvar ProxyElement = (function () {\n    function ProxyElement(__zone) {\n        this.__zone = __zone;\n    }\n    Object.defineProperty(ProxyElement.prototype, \"_zone\", {\n        get: function () { return this.__zone || Zone.current; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProxyElement.prototype, \"querySelector\", {\n        get: function () {\n            var parentElement = this._zone.get('parentElement');\n            var _zone = this._zone.fork({\n                name: 'ProxyElement.querySelector',\n                properties: { parentElement: parentElement }\n            });\n            return _zone.wrap(querySelector, 'ProxyElement.querySelector');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProxyElement.prototype, \"querySelectorAll\", {\n        get: function () {\n            var parentElement = this._zone.get('parentElement');\n            var _zone = this._zone.fork({\n                name: 'ProxyElement.querySelectorAll',\n                properties: { parentElement: parentElement }\n            });\n            return _zone.wrap(querySelectorAll, 'ProxyElement.querySelector');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProxyElement.prototype, \"tagName\", {\n        get: function () {\n            var el = this._zone.get('element');\n            return el.tagName;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProxyElement.prototype, \"value\", {\n        get: function () {\n            var el = this._zone.get('element');\n            return el.value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProxyElement.prototype, \"nodeName\", {\n        get: function () {\n            var el = this._zone.get('element');\n            return el.tagName;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProxyElement.prototype, \"nodeValue\", {\n        get: function () {\n            var el = this._zone.get('element');\n            return el.nodeValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProxyElement.prototype, \"firstChild\", {\n        get: function () {\n            var DOM = lib_1.getDOM();\n            var parentElement = this._zone.get('element');\n            var _zone = this._zone.fork({\n                name: 'ProxyElement.querySelector',\n                properties: { parentElement: parentElement }\n            });\n            return _zone.run(function () { return DOM.firstChild(parentElement); });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProxyElement.prototype, \"nextSibling\", {\n        get: function () {\n            var el = this._zone.get('element');\n            return el.nextSibling;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProxyElement.prototype, \"parentElement\", {\n        get: function () {\n            var el = this._zone.get('element');\n            return el.parent;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProxyElement.prototype, \"childNodes\", {\n        get: function () {\n            var DOM = lib_1.getDOM();\n            var parentElement = this._zone.get('element');\n            var _zone = this._zone.fork({\n                name: 'ProxyElement.querySelector',\n                properties: { parentElement: parentElement }\n            });\n            return _zone.run(function () { return DOM.childNodes(parentElement); });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ProxyElement.prototype.createElement = function (tagName) {\n        var DOM = lib_1.getDOM();\n        return DOM.createElement(tagName);\n    };\n    return ProxyElement;\n}());\nexports.ProxyElement = ProxyElement;\nvar ProxyDocument = (function () {\n    function ProxyDocument(__zone) {\n        this.__zone = __zone;\n    }\n    Object.defineProperty(ProxyDocument.prototype, \"_zone\", {\n        get: function () { return this.__zone || Zone.current; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProxyDocument.prototype, \"querySelector\", {\n        get: function () {\n            var document = this._zone.get('document');\n            var zone = this._zone.fork({\n                name: 'ProxyDocument.querySelector',\n                properties: {\n                    parentElement: document\n                }\n            });\n            return zone.wrap(querySelector, 'ProxyDocument.querySelector');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProxyDocument.prototype, \"querySelectorAll\", {\n        get: function () {\n            var document = this._zone.get('document');\n            var _zone = this._zone.fork({\n                name: 'ProxyDocument.querySelectorAll',\n                properties: {\n                    parentElement: document\n                }\n            });\n            return _zone.wrap(querySelectorAll, 'ProxyDocument.querySelector');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProxyDocument.prototype, \"tagName\", {\n        get: function () {\n            var el = this._zone.get('document');\n            return el.tagName;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProxyDocument.prototype, \"cookie\", {\n        get: function () {\n            var el = this._zone.get('cookie');\n            return el.cookie;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ProxyDocument.prototype.createElement = function (tagName) {\n        var DOM = lib_1.getDOM();\n        return DOM.createElement(tagName);\n    };\n    return ProxyDocument;\n}());\nexports.ProxyDocument = ProxyDocument;\nfunction createDocumentProxy() {\n    return new ProxyDocument();\n}\nexports.createDocumentProxy = createDocumentProxy;\nfunction createGlobalProxy() {\n    var originalDocumentRef = global.document;\n    if (originalDocumentRef instanceof ProxyDocument) {\n        return originalDocumentRef;\n    }\n    var document = createDocumentProxy();\n    Object.defineProperty(global, 'document', {\n        enumerable: false,\n        configurable: false,\n        get: function () {\n            var doc = Zone.current.get('document');\n            if (doc) {\n                return document;\n            }\n            return originalDocumentRef;\n        },\n        set: function (_newValue) {\n        }\n    });\n    return document;\n}\nexports.createGlobalProxy = createGlobalProxy;\nfunction querySelector(query) {\n    var DOM = lib_1.getDOM();\n    var parentElement = Zone.current.get('parentElement');\n    var element = DOM.querySelector(parentElement, query);\n    var zone = Zone.current.fork({\n        name: 'querySelector',\n        properties: { parentElement: parentElement, element: element }\n    });\n    return new ProxyElement(zone);\n}\nfunction querySelectorAll(query) {\n    var DOM = lib_1.getDOM();\n    var parentElement = Zone.current.get('parentElement');\n    var element = DOM.querySelectorAll(parentElement, query);\n    var zone = Zone.current.fork({\n        name: 'querySelector',\n        properties: { parentElement: parentElement, element: element }\n    });\n    return new ProxyElement(zone);\n}\n//# sourceMappingURL=proxy-document.js.map","/home/travis/build/npmtest/node-npmtest-angular2-universal/node_modules/angular2-universal/lib/index.js":"\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(require('angular2-platform-node'));\n//# sourceMappingURL=index.js.map"}